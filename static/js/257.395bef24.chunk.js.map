{"version":3,"file":"static/js/257.395bef24.chunk.js","mappings":"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","sources":["pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","pages/Reviews/Reviews.styled.jsx","pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastContainer = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ActorCard = styled.li`\n  flex: 0 0 calc(100% / 10);\n  margin-bottom: 20px;\n  padding: 10px;\n\n  @media (max-width: 1200px) {\n    width: calc(100% / 4);\n  }\n\n  @media (max-width: 800px) {\n    width: calc(100% / 3);\n  }\n\n  @media (max-width: 600px) {\n    width: calc(100% / 2);\n  }\n`;\n\nexport const ActorImage = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const PlaceholderImage = styled.div`\n  width: 100%;\n  height: 0;\n  padding-bottom: 150%; /* Maintain a 2:3 aspect ratio for the placeholder */\n  margin-bottom: 10px;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3c?xml version='1.0' encoding='UTF-8' standalone='no'?%3e%3csvg xmlns='http://www.w3.org/2000/svg' width='225' height='150' version='1.0'%3e%3cpath fill='%23d4d4d4' d='M0 0v150h225V0H0z'/%3e%3cpath fill='%23fff' d='m64.055077 38.894466 36.105543 36.105536-36.105543 36.105538 12.320373 12.32038 36.10554-36.105547 36.12454 36.124547 12.33939-12.33938-36.12454-36.124551 36.10554-36.105537-12.32039-12.320372-36.10552 36.105536L76.394463 26.55508 64.055077 38.894466z' overflow='visible' style='marker:none'/%3e%3c/svg%3e\");\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const ActorName = styled.p`\n  margin-top: 10px;\n  font-weight: bold;\n`;\n\nexport const CharacterName = styled.p`\n  margin-top: 5px;\n`;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CastContainer,\n  ActorCard,\n  ActorImage,\n  PlaceholderImage,\n  ActorName,\n  CharacterName,\n} from './Cast.styled';\n\nconst Cast = ({ cast }) => {\n  if (cast.length === 0) {\n    return <p>The actors of this movie are not represented.</p>;\n  }\n  return (\n    <CastContainer>\n      {cast.map(actor => (\n        <ActorCard key={actor.id}>\n          <div>\n            {actor.profile_path ? (\n              <ActorImage\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                alt={actor.name}\n              />\n            ) : (\n              <PlaceholderImage />\n            )}\n            <ActorName>Actor: {actor.name}</ActorName>\n            <CharacterName>\n              Character: {actor.character.split('/')[0]}\n            </CharacterName>\n          </div>\n        </ActorCard>\n      ))}\n    </CastContainer>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div``;\n\nexport const UpperSection = styled.div`\n  display: flex;\n  align-items: flex-start;\n  max-width: 900px;\n  margin: 0 auto;\n`;\n\nexport const PosterSection = styled.div`\n  flex: 0 0 30%;\n`;\n\nexport const PosterImage = styled.img`\n  width: 100%;\n`;\n\nexport const DetailsSection = styled.div`\n  flex: 1;\n  padding: 0 20px;\n`;\n\nexport const GoBackButton = styled.button`\n  padding: 10px 20px;\n  background-color: #f5f5f5;\n  color: #333;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n    color: #fff;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nexport const UserScore = styled.p``;\n\nexport const Bold = styled.p`\n  font-weight: bold;\n`;\n\nexport const SpanBold = styled.span`\n  font-weight: bold;\n`;\n\nexport const Overview = styled.div`\n  margin-top: 10px;\n`;\n\nexport const Genres = styled.div`\n  margin-top: 10px;\n  span:not(:last-child)::after {\n    content: ' | ';\n  }\n`;\n\nexport const LowerSection = styled.div`\n  margin-top: 40px;\n`;\n\nexport const ButtonMovieDetails = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const AdditionalInfo = styled.div`\n  text-align: center;\n`;\n\nexport const InfoButton = styled.button`\n  margin: 10px;\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nexport const TiteInfo = styled.h2`\n  color: #b92121;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport Loader from '../../components/Loader/Loader';\nimport { fetchMovieDetails, fetchCast, fetchReviews } from 'services/api';\nimport {\n  MovieDetailsContainer,\n  UpperSection,\n  PosterSection,\n  PosterImage,\n  DetailsSection,\n  GoBackButton,\n  MovieTitle,\n  UserScore,\n  Bold,\n  SpanBold,\n  Overview,\n  Genres,\n  LowerSection,\n  ButtonMovieDetails,\n  AdditionalInfo,\n  InfoButton,\n  TiteInfo,\n} from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetailsData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetailsData);\n\n        const castData = await fetchCast(movieId);\n        setCast(castData);\n\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!movieDetails) {\n    return <div>Unable to fetch movie details.</div>;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movieDetails;\n  const userScore = (vote_average * 10).toFixed(2);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n    setShowReviews(false);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n    setShowCast(false);\n  };\n\n  const goBack = () => {\n    navigate(-1);\n  };\n\n  const releaseYear = release_date ? release_date.split('-')[0] : '';\n\n  return (\n    <MovieDetailsContainer>\n      <UpperSection>\n        <PosterSection>\n          {poster_path && (\n            <PosterImage\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          )}\n        </PosterSection>\n        <DetailsSection>\n          <GoBackButton onClick={goBack}>Go Back</GoBackButton>\n          <MovieTitle>\n            {title} ({releaseYear})\n          </MovieTitle>\n          <UserScore>\n            <SpanBold>User Score: </SpanBold>\n            {userScore}%\n          </UserScore>\n          <Overview>\n            <Bold>Overview </Bold>\n            {overview}\n          </Overview>\n          <Genres>\n            <Bold>Genres </Bold>{' '}\n            {genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </Genres>\n        </DetailsSection>\n      </UpperSection>\n      <LowerSection>\n        <AdditionalInfo>\n          <TiteInfo>Additional Information</TiteInfo>\n          <ButtonMovieDetails>\n            <li>\n              <InfoButton onClick={toggleCast}>Cast</InfoButton>\n            </li>\n            <li>\n              <InfoButton onClick={toggleReviews}>Reviews</InfoButton>\n            </li>\n          </ButtonMovieDetails>\n          <Outlet />\n        </AdditionalInfo>\n        {showCast && <Cast cast={cast} />}\n        {showReviews && (\n          <>\n            {reviews.length === 0 ? (\n              <p>We don't have any reviews for this movie.</p>\n            ) : (\n              <Reviews reviews={reviews} />\n            )}\n          </>\n        )}\n      </LowerSection>\n    </MovieDetailsContainer>\n  );\n};\n\nMovieDetails.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  release_date: PropTypes.string,\n};\nexport default MovieDetails;\n","import styled from 'styled-components';\n\nexport const ReviewContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nexport const Author = styled.p`\n  font-weight: bold;\n`;\n\nexport const Content = styled.p`\n  margin-top: 5px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReviewContainer, ReviewItem, Author, Content } from './Reviews.styled';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <ReviewContainer>\n      <ul>\n        {reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <Author>Author: {review.author}</Author>\n            <Content>{review.content}</Content>\n          </ReviewItem>\n        ))}\n      </ul>\n    </ReviewContainer>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6d44761072bd3455ede44a6813ca8a9a';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query) => {\n  const path = '/search/movie';\n\n  try {\n    const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    throw error;\n  }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n  const path = `/movie/${movieId}`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.cast;\n  } catch (error) {\n    console.log('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\n"],"names":["CastContainer","styled","ActorCard","ActorImage","PlaceholderImage","ActorName","CharacterName","cast","length","map","actor","profile_path","src","alt","name","character","split","id","MovieDetailsContainer","UpperSection","PosterSection","PosterImage","DetailsSection","GoBackButton","MovieTitle","UserScore","Bold","SpanBold","Overview","Genres","LowerSection","ButtonMovieDetails","AdditionalInfo","InfoButton","TiteInfo","movieId","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","setCast","reviews","setReviews","showCast","setShowCast","showReviews","setShowReviews","isLoading","setIsLoading","useEffect","fetchData","fetchMovieDetails","movieDetailsData","fetchCast","castData","fetchReviews","reviewsData","console","log","Loader","poster_path","title","vote_average","overview","genres","release_date","userScore","toFixed","releaseYear","onClick","genre","Cast","Reviews","ReviewContainer","ReviewItem","Author","Content","review","author","content","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","fetchTrendingMovies","response","data","results","searchMovies","query","path"],"sourceRoot":""}