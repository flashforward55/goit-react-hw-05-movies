{"version":3,"file":"static/js/115.889ec9a5.chunk.js","mappings":"gOAgEA,UA3De,WACb,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAY,mCAAG,oGAEjBD,GAAa,GAFI,SAIME,EAAAA,EAAAA,IACrB,4CACA,CACEC,OAAQ,CACNC,QAAS,mCACTC,MAAOV,KATI,OAIXW,EAJW,OAcjBR,EAAiBQ,EAASC,KAAKC,SAdd,gDAgBjBC,QAAQC,IAAI,0BAAZ,MAhBiB,yBAkBjBV,GAAa,GAlBI,4EAAH,qDA4BlB,OACE,4BACE,wBAAI,mBACJ,kBACEW,KAAK,OACLC,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAIlB,EAAekB,EAAEC,OAAOH,MAA5B,EACXI,UAbgB,SAAAF,GACN,UAAVA,EAAEG,KACJhB,GAEH,KAWG,mBAAQiB,QAASjB,EAAjB,SAA+B,WAE9BF,GACC,SAAC,IAAD,KAEA,wBACGF,EAAcsB,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADO,QASjC,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport Loader from 'components/Loader/Loader';\nimport { Link } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSearch = async () => {\n    try {\n      setIsLoading(true);\n\n      const response = await axios.get(\n        'https://api.themoviedb.org/3/search/movie',\n        {\n          params: {\n            api_key: '6d44761072bd3455ede44a6813ca8a9a',\n            query: searchQuery,\n          },\n        }\n      );\n\n      setSearchResults(response.data.results);\n    } catch (error) {\n      console.log('Error searching movies:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <input\n        type=\"text\"\n        value={searchQuery}\n        onChange={e => setSearchQuery(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <button onClick={handleSearch}>Search</button>\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <ul>\n          {searchResults.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","isLoading","setIsLoading","handleSearch","axios","params","api_key","query","response","data","results","console","log","type","value","onChange","e","target","onKeyDown","key","onClick","map","movie","to","id","title"],"sourceRoot":""}