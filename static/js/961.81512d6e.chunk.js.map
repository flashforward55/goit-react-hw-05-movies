{"version":3,"file":"static/js/961.81512d6e.chunk.js","mappings":"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","sources":["pages/Cast/Cast.jsx","pages/MovieDetails/MovieDetails.jsx","pages/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst CastContainer = styled.ul`\n  padding: 0;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst ActorCard = styled.li`\n  width: calc(9%);\n  margin-bottom: 20px;\n  padding: 10px;\n`;\n\nconst ActorImage = styled.img`\n  width: 150px;\n  height: 225px;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nconst PlaceholderImage = styled.div`\n  width: 150px;\n  height: 225px;\n  margin-bottom: 10px;\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3c?xml version='1.0' encoding='UTF-8' standalone='no'?%3e%3csvg xmlns='http://www.w3.org/2000/svg' width='225' height='150' version='1.0'%3e%3cpath fill='%23d4d4d4' d='M0 0v150h225V0H0z'/%3e%3cpath fill='%23fff' d='m64.055077 38.894466 36.105543 36.105536-36.105543 36.105538 12.320373 12.32038 36.10554-36.105547 36.12454 36.124547 12.33939-12.33938-36.12454-36.124551 36.10554-36.105537-12.32039-12.320372-36.10552 36.105536L76.394463 26.55508 64.055077 38.894466z' overflow='visible' style='marker:none'/%3e%3c/svg%3e\");\n  background-size: cover;\n  background-position: center;\n`;\n\nconst ActorName = styled.p`\n  margin-top: 10px;\n  font-weight: bold;\n`;\n\nconst CharacterName = styled.p`\n  margin-top: 5px;\n`;\n\nconst Cast = ({ cast }) => {\n  return (\n    <CastContainer>\n      {cast.map(actor => (\n        <ActorCard key={actor.id}>\n          <div>\n            {actor.profile_path ? (\n              <ActorImage\n                src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                alt={actor.name}\n              />\n            ) : (\n              <PlaceholderImage />\n            )}\n            <ActorName>Actor: {actor.name}</ActorName>\n            <CharacterName>\n              Character: {actor.character.split('/')[0]}\n            </CharacterName>\n          </div>\n        </ActorCard>\n      ))}\n    </CastContainer>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Cast;\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Outlet } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\nimport Loader from '../../components/Loader/Loader';\nimport { fetchMovieDetails, fetchCast, fetchReviews } from 'services/api';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst MovieDetailsContainer = styled.div``;\n\nconst UpperSection = styled.div`\n  display: flex;\n  align-items: flex-start;\n  max-width: 900px;\n  margin: 0 auto;\n`;\n\nconst PosterSection = styled.div`\n  flex: 0 0 30%;\n`;\n\nconst PosterImage = styled.img`\n  width: 100%;\n`;\n\nconst DetailsSection = styled.div`\n  flex: 1;\n  padding: 0 20px;\n`;\n\nconst GoBackButton = styled.button`\n  padding: 10px 20px;\n  background-color: #f5f5f5;\n  color: #333;\n  border: none;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  margin-bottom: 20px;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #ccc;\n    color: #fff;\n  }\n`;\n\nconst MovieTitle = styled.h2`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst UserScore = styled.p`\n  font-weight: bold;\n`;\n\nconst Overview = styled.p`\n  margin-top: 10px;\n`;\n\nconst Genres = styled.p`\n  margin-top: 10px;\n  span:not(:last-child)::after {\n    content: '| ';\n  }\n`;\n\nconst LowerSection = styled.div`\n  margin-top: 40px;\n`;\n\nconst ButtonMovieDetails = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nconst AdditionalInfo = styled.div`\n  text-align: center;\n`;\n\nconst InfoButton = styled.button`\n  margin: 10px;\n  padding: 8px 16px;\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  background-color: #007bff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n\n  &:hover {\n    background-color: #0056b3;\n  }\n`;\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        const movieDetailsData = await fetchMovieDetails(movieId);\n        setMovieDetails(movieDetailsData);\n\n        const castData = await fetchCast(movieId);\n        setCast(castData);\n\n        const reviewsData = await fetchReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (!movieDetails) {\n    return <div>Unable to fetch movie details.</div>;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, release_date } =\n    movieDetails;\n  const userScore = (vote_average * 10).toFixed(2);\n\n  const toggleCast = () => {\n    setShowCast(!showCast);\n    setShowReviews(false);\n  };\n\n  const toggleReviews = () => {\n    setShowReviews(!showReviews);\n    setShowCast(false);\n  };\n\n  const goBack = () => {\n    navigate('/');\n  };\n\n  const releaseYear = release_date ? release_date.split('-')[0] : '';\n\n  return (\n    <MovieDetailsContainer>\n      <UpperSection>\n        <PosterSection>\n          {poster_path && (\n            <PosterImage\n              src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n              alt={title}\n            />\n          )}\n        </PosterSection>\n        <DetailsSection>\n          <GoBackButton onClick={goBack}>Go Back</GoBackButton>\n          <MovieTitle>\n            {title} ({releaseYear})\n          </MovieTitle>\n          <UserScore>User Score: {userScore}%</UserScore>\n          <Overview>Overview: {overview}</Overview>\n          <Genres>\n            Genres:{' '}\n            {genres.map(genre => (\n              <span key={genre.id}>{genre.name} </span>\n            ))}\n          </Genres>\n        </DetailsSection>\n      </UpperSection>\n      <LowerSection>\n        <AdditionalInfo>\n          <AdditionalInfo>\n            <h2>Additional Information</h2>\n            <ButtonMovieDetails>\n              <li>\n                <InfoButton onClick={toggleCast}>Cast</InfoButton>\n              </li>\n              <li>\n                <InfoButton onClick={toggleReviews}>Reviews</InfoButton>\n              </li>\n            </ButtonMovieDetails>\n            <Outlet />\n          </AdditionalInfo>\n        </AdditionalInfo>\n        {showCast && <Cast cast={cast} />}\n        {showReviews && (\n          <>\n            {reviews.length === 0 ? (\n              <p>We don't have any reviews for this movie.</p>\n            ) : (\n              <Reviews reviews={reviews} />\n            )}\n          </>\n        )}\n      </LowerSection>\n    </MovieDetailsContainer>\n  );\n};\n\nMovieDetails.propTypes = {\n  poster_path: PropTypes.string,\n  title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  release_date: PropTypes.string,\n};\nexport default MovieDetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ReviewContainer = styled.div`\n  margin-top: 20px;\n`;\n\nconst ReviewItem = styled.li`\n  margin-bottom: 20px;\n`;\n\nconst Author = styled.p`\n  font-weight: bold;\n`;\n\nconst Content = styled.p`\n  margin-top: 5px;\n`;\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <ReviewContainer>\n      <ul>\n        {reviews.map(review => (\n          <ReviewItem key={review.id}>\n            <Author>Author: {review.author}</Author>\n            <Content>{review.content}</Content>\n          </ReviewItem>\n        ))}\n      </ul>\n    </ReviewContainer>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '6d44761072bd3455ede44a6813ca8a9a';\n\nconst searchParams = new URLSearchParams({\n  method: 'GET',\n  api_key: KEY,\n  language: 'en-US',\n  include_adult: false,\n  headers: {\n    accept: 'application/json',\n  },\n});\n\nexport const fetchTrendingMovies = async () => {\n  const path = '/trending/movie/day';\n\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error fetching trending movies:', error);\n    throw error;\n  }\n};\n\nexport const searchMovies = async (query) => {\n  const path = '/search/movie';\n\n  try {\n    const response = await axios.get(`${path}?${searchParams}&query=${query}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error searching movies:', error);\n    throw error;\n  }\n};\n\n\nexport const fetchMovieDetails = async movieId => {\n  const path = `/movie/${movieId}`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data;\n  } catch (error) {\n    console.log('Error fetching movie details:', error);\n    throw error;\n  }\n};\n\nexport const fetchCast = async movieId => {\n  const path = `/movie/${movieId}/credits`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.cast;\n  } catch (error) {\n    console.log('Error fetching cast:', error);\n    throw error;\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const path = `/movie/${movieId}/reviews`;\n  try {\n    const response = await axios.get(`${path}?${searchParams}`);\n    return response.data.results;\n  } catch (error) {\n    console.log('Error fetching reviews:', error);\n    throw error;\n  }\n};\n\n"],"names":["CastContainer","styled","ActorCard","ActorImage","PlaceholderImage","ActorName","CharacterName","cast","map","actor","profile_path","src","alt","name","character","split","id","MovieDetailsContainer","UpperSection","PosterSection","PosterImage","DetailsSection","GoBackButton","MovieTitle","UserScore","Overview","Genres","LowerSection","ButtonMovieDetails","AdditionalInfo","InfoButton","movieId","useParams","navigate","useNavigate","useState","movieDetails","setMovieDetails","setCast","reviews","setReviews","showCast","setShowCast","showReviews","setShowReviews","isLoading","setIsLoading","useEffect","fetchData","fetchMovieDetails","movieDetailsData","fetchCast","castData","fetchReviews","reviewsData","console","log","poster_path","title","vote_average","overview","genres","release_date","userScore","toFixed","releaseYear","onClick","genre","length","ReviewContainer","ReviewItem","Author","Content","review","author","content","axios","searchParams","URLSearchParams","method","api_key","language","include_adult","headers","accept","fetchTrendingMovies","response","data","results","searchMovies","query","path"],"sourceRoot":""}