{"version":3,"file":"static/js/947.91c23b02.chunk.js","mappings":"yNA4DA,UAxDqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAsBA,IApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAECC,EAAAA,EAAAA,IAAA,6CACiBP,GACtC,CACEQ,OAAQ,CACNC,QAAS,sCANO,OAEhBC,EAFgB,OAUtBN,EAAgBM,EAASC,MAVH,gDAYtBC,QAAQC,IAAI,gCAAZ,MAZsB,yDAAH,qDAgBvBP,GACD,GAAE,CAACN,KAECG,EACH,OAAO,yBAAK,eAGd,IAAQW,EAAuDX,EAAvDW,YAAaC,EAA0CZ,EAA1CY,MAAOC,EAAmCb,EAAnCa,aAAcC,EAAqBd,EAArBc,SAAUC,EAAWf,EAAXe,OAG9CC,EAA2B,GAAfH,EAElB,OACE,4BACE,wBAAKD,KACL,yBACGD,IACC,gBACEM,IAAG,0CAAqCN,GACxCO,IAAKN,OAIX,yBAAG,eAAaI,EAAU,QAC1B,yBAAG,aAAWF,MACd,yBAAG,UACO,IACPC,EAAOI,KAAI,SAAAC,GAAK,OACf,4BAAsBA,EAAMC,KAAK,MAAtBD,EAAME,GADF,SAMxB,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}`,\n          {\n            params: {\n              api_key: '6d44761072bd3455ede44a6813ca8a9a',\n            },\n          }\n        );\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.log('Error fetching movie details:', error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  const { poster_path, title, vote_average, overview, genres } = movieDetails;\n\n  // Calculate user score percentage\n  const userScore = vote_average * 10;\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <div>\n        {poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        )}\n      </div>\n      <p>User Score: {userScore}%</p>\n      <p>Overview: {overview}</p>\n      <p>\n        Genres:{' '}\n        {genres.map(genre => (\n          <span key={genre.id}>{genre.name} </span>\n        ))}\n      </p>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","fetchMovieDetails","axios","params","api_key","response","data","console","log","poster_path","title","vote_average","overview","genres","userScore","src","alt","map","genre","name","id"],"sourceRoot":""}